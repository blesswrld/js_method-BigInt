'use strict';

// const bigint = 122634634734251364743214351515163n;
// Пример инициализации `BigInt` с суффиксом `n`, указывающим на тип BigInt.

const sameBigint = BigInt(122634634734251364743214351515163n); // Конструктор `BigInt()` для создания объекта BigInt из строки или числа.

// console.log(2n === 2);
// Строгое сравнение `BigInt` и `Number` не даст true, так как это разные типы.

let bigint = 1n;  // Инициализация переменной типа `BigInt`.
let number = 2;   // Обычное число типа `Number`.

console.log(bigint + BigInt(number));  
// Преобразуем `number` в `BigInt` и выполняем сложение. Результат — `BigInt`.

console.log(Number(bigint) + number);
// Преобразуем `BigInt` в `Number` и выполняем сложение. Результат — обычное число.


// Операторы в BigInt:

// Сложение (+): Работает точно так же, как и для обычных чисел, но нужно быть уверенным, что оба операнда типа `BigInt`.
// Например, можно использовать `BigInt(number)` для преобразования обычного числа в `BigInt`, прежде чем производить операцию.

// Вычитание (-), умножение (*), деление (/), остаток от деления (%): Операции с `BigInt` также поддерживают эти стандартные арифметические операции.
// Они ведут себя аналогично операциям для обычных чисел, только результат всегда будет типа `BigInt`.
